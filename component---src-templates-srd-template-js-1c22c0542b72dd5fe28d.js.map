{"version":3,"sources":["webpack:///./src/templates/SRDTemplate.js","webpack:///./src/components/styles/BodyText.js"],"names":["FloatingNavDark","styled","Navigation","BodyTextSmall","BodyText","TOC","nav","font","body","TOCSectionTitle","div","display","BodyContainer","SRDContainer","SRDTemplate","data","simplifiedPages","pageContext","srdPages","map","get","groupedPages","Object","entries","groupBy","page","frontmatter","console","log","index","sectionTitle","key","entry","currentPage","slug","className","undefined","to","title","dangerouslySetInnerHTML","__html","html","pageQuery","media","phone"],"mappings":"6FAAA,8JAWMA,EAAkBC,YAAOC,KAAV,+EAAGD,CAAH,qCAKfE,EAAgBF,YAAOG,KAAV,6EAAGH,CAAH,qBAIbI,EAAMJ,IAAOK,IAAV,mEAAGL,CAAH,6QAcCM,IAAKC,MA2BTC,EAAkBR,IAAOS,IAAV,+EAAGT,CAAH,6BACfM,IAAKI,SAILC,EAAgBX,IAAOS,IAAV,6EAAGT,CAAH,6EAObY,EAAeZ,IAAOS,IAAV,4EAAGT,CAAH,wBA8CHa,UA1CK,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KACbC,EADmD,EAAhCC,YAAeC,SACPC,IAAIC,cAAI,qBACnCC,EAAeC,OAAOC,QAAQC,kBAAQ,UAAWR,IACjDS,EAAOL,cAAI,iBAAkBL,GAC7BW,EAAcN,cAAI,cAAeK,GAIvC,OAFAE,QAAQC,IAAIH,GAGR,kBAAC,IAAD,KACI,kBAACzB,EAAD,MAEA,kBAACa,EAAD,KACI,kBAACR,EAAD,KACKgB,EAAaF,KAAI,WAA0BU,GAA1B,IAAEC,EAAF,KAAgBP,EAAhB,YACd,wBAAIQ,IAAKF,GACL,kBAACpB,EAAD,KAAkBqB,GAElB,4BACKP,EAAQJ,KAAI,SAACa,EAAOH,GACjB,IAAMI,EAAcD,EAAME,OAASR,EAAYQ,KAE/C,OACI,wBAAIH,IAAKF,EAAOM,UAAWF,EAAc,eAAYG,GACjD,kBAAC,IAAD,CAAMC,GAAE,QAAUL,EAAME,MAASF,EAAMM,iBAQnE,kBAAC1B,EAAD,KACI,kBAACT,EAAD,CAAeoC,wBAAyB,CAAEC,OAAQf,EAAKgB,YAWpE,IAAMC,EAAS,a,6LCrHtB,IAAMtC,EAAWH,IAAOS,IAAV,+DAAGT,CAAH,qNAMJM,IAAKI,QAqBTgC,IAAMC,MA3BE,MAgCCxC","file":"component---src-templates-srd-template-js-1c22c0542b72dd5fe28d.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { groupBy, get } from 'lodash/fp';\nimport { Link } from 'gatsby';\n\nimport SiteContainer from '../components/layout/SiteContainer';\nimport Navigation from '../components/navigation/Navigation';\nimport BodyText from '../components/styles/BodyText';\n\nimport font from '../components/styles/font';\n\nconst FloatingNavDark = styled(Navigation)`\n    background: #100113;\n    color: white;\n`\n\nconst BodyTextSmall = styled(BodyText)`\n    font-size: 1rem;\n`\n\nconst TOC = styled.nav`\n    position: fixed;\n\n    width: 20rem;\n    height: 100%;\n\n    padding-top: 4rem;\n    padding-right: 1rem;\n    margin-right: 2rem;\n\n    font-size: 1rem;\n    line-height: 1;\n\n    a {\n        ${font.body};\n        color: black;\n        font-weight: bold;\n    }\n\n    ul {\n        list-style: none;\n\n        ul {\n            margin: 0;\n        }\n    }\n\n    li {\n        margin: 0;\n        padding: 0.2rem;\n    }\n\n    li.current {\n        background: yellow;\n\n        a {\n            color: black;\n        }\n    }\n`;\n\nconst TOCSectionTitle = styled.div`\n    ${font.display};\n    padding-bottom: 1rem;\n`;\n\nconst BodyContainer = styled.div`\n    margin-left: 24rem;\n    max-width: 30rem;\n    padding-top: 6rem;\n    padding-bottom: 4rem;\n`\n\nconst SRDContainer = styled.div`\n    position: relative;\n`\n\nconst SRDTemplate = ({ data, pageContext: { srdPages } }) => {\n    const simplifiedPages = srdPages.map(get('node.frontmatter'));\n    const groupedPages = Object.entries(groupBy('section', simplifiedPages));\n    const page = get('markdownRemark', data);\n    const frontmatter = get('frontmatter', page);\n\n    console.log(page);\n\n    return (\n        <SiteContainer>\n            <FloatingNavDark />\n\n            <SRDContainer>\n                <TOC>\n                    {groupedPages.map(([sectionTitle, entries], index) => (\n                        <ul key={index}>\n                            <TOCSectionTitle>{sectionTitle}</TOCSectionTitle>\n\n                            <ul>\n                                {entries.map((entry, index) => {\n                                    const currentPage = entry.slug === frontmatter.slug;\n\n                                    return (\n                                        <li key={index} className={currentPage ? 'current' : undefined}>\n                                            <Link to={`/srd/${entry.slug}`}>{entry.title}</Link>\n                                        </li>\n                                    );\n                                })}\n                            </ul>\n                        </ul>\n                    ))}\n                </TOC>\n                <BodyContainer>\n                    <BodyTextSmall dangerouslySetInnerHTML={{ __html: page.html }} />\n                </BodyContainer>\n            </SRDContainer>\n        </SiteContainer>\n    );\n\n    return null;\n};\n\nexport default SRDTemplate;\n\nexport const pageQuery = graphql`\n    query($slug: String!) {\n        markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n            html\n            frontmatter {\n                slug\n                title\n            }\n            tableOfContents\n        }\n    }\n`;\n","import styled from 'styled-components';\nimport media from './media';\nimport font from './font';\n\nconst BodyText = styled.div`\n    font-family: interstate-condensed, sans-serif;\n    font-size: 1.4rem;\n    line-height: 1.4;\n\n    h1, h2, h3, h4 {\n        ${font.display};\n    }\n\n    h1 {\n        font-size:\n    }\n\n    p, ul {\n        margin-top: 0.5em;\n        margin-bottom: 0.5em;\n    }\n\n    table {\n        width: auto;\n    }\n\n    ul {\n        list-style: disc;\n        margin-left: 1em;\n    }\n\n    ${media.phone`\n        font-size: 1.3rem;\n    `}\n`;\n\nexport default BodyText;\n"],"sourceRoot":""}