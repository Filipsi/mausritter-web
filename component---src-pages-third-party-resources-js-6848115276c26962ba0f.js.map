{"version":3,"sources":["webpack:///./src/components/thirdPartyResources/ThirdPartyResources.js","webpack:///./src/pages/third-party-resources.js"],"names":["ResourcePageContainer","styled","div","ResourceTableContainer","ResourceTableEntry","font","display","media","phone","StyleSortButton","button","body","active","sortAsc","SortButton","children","sortByField","setSortBy","currentSortBy","className","onClick","ThirdPartyLicence","useState","setSortByField","setSortAsc","setSortMethod","field","sortedResources","sortBy","THIRD_PARTY_RESOURCES","reverse","ContentContainer","BodyText","style","marginBottom","to","map","image","link","name","author","releaseDate","type","href","target","src","alt","loading","startCase","IndexPage","SiteContainer","SEO","title","Navigation","ThirdPartyResources","Footer"],"mappings":"q4BAcA,IAAMA,EAAwBC,IAAOC,IAAV,gGAAGD,CAAH,yCAKrBE,EAAyBF,IAAOC,IAAV,iGAAGD,CAAH,MAEtBG,EAAqBH,IAAOC,IAAV,6FAAGD,CAAH,udA6BdI,IAAKC,QAgBTC,IAAMC,MA7CY,MAuElBC,EAAkBR,IAAOS,OAAV,0FAAGT,CAAH,qLAKfI,IAAKM,MAWL,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACED,GAAM,yLAUUC,EAAU,IAAM,KAV1B,sDAcRN,IAAMC,MA/BS,MAoCfM,EAAa,SAAC,GAOb,IANHC,EAME,EANFA,SACAC,EAKE,EALFA,YACAC,EAIE,EAJFA,UACAC,EAGE,EAHFA,cACAL,EAEE,EAFFA,QACAM,EACE,EADFA,UAEA,OACI,kBAACV,EAAD,CACII,QAASA,EACTD,OAAQI,IAAgBE,EACxBE,QAAS,WACLH,EAAUD,IAEdG,UAAWA,GAEX,8BAAOJ,KA0HJM,EArHW,WAAO,IAAD,EACUC,mBAAS,eAAxCN,EADqB,KACRO,EADQ,OAEED,oBAAS,GAAhCT,EAFqB,KAEZW,EAFY,KAItBC,EAAgB,SAAAC,GAClBH,EAAeG,GAGXF,EADAR,IAAgBU,GACJb,EAES,gBAAVa,IAIfC,EAAkBC,iBAAOZ,EAAaa,KAM1C,OAJIhB,IACAc,EAAkBA,EAAgBG,WAIlC,kBAAC9B,EAAD,KACI,kBAAC+B,EAAA,EAAD,KACI,kBAAC,IAAD,yCAEA,kBAACC,EAAA,EAAD,CACIb,UAAU,eACVc,MAAO,CACHC,aAAc,SAGlB,yIAIA,6CACoB,IAChB,kBAAC,IAAD,CAAMC,GAAG,wBAAT,oCAMR,kBAAChC,EAAD,KACI,kBAACC,EAAD,KACI,yBAAKe,UAAU,SAAf,KACA,kBAAC,EAAD,CACIF,UAAWQ,EACXP,cAAeF,EACfH,QAASA,EACTG,YAAY,QAJhB,SAQA,kBAAC,EAAD,CACIC,UAAWQ,EACXP,cAAeF,EACfH,QAASA,EACTG,YAAY,UAJhB,UAQA,kBAAC,EAAD,CACIC,UAAWQ,EACXP,cAAeF,EACfH,SAAUA,EACVG,YAAY,eAJhB,gBAQA,kBAAC,EAAD,CACIC,UAAWQ,EACXP,cAAeF,EACfH,QAASA,EACTG,YAAY,OACZG,UAAU,iBALd,SAUHQ,EAAgBS,KACb,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,OAAQC,EAA9B,EAA8BA,YAAaC,EAA3C,EAA2CA,KAA3C,OACI,kBAACtC,EAAD,KACI,uBACIuC,KAAML,EACNM,OAAO,SACPzB,UAAU,SAETkB,GACG,yBACIQ,IAAKR,EACLS,IAAI,GACJC,QAAQ,UAIpB,uBACIJ,KAAML,EACNM,OAAO,SACPzB,UAAU,SAEToB,GAEL,yBAAKpB,UAAU,UAAUqB,GACzB,yBAAKrB,UAAU,QAAQsB,GACvB,yBAAKtB,UAAU,iBACV6B,oBAAUN,YCvOhCO,UAdG,WACd,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,MAAM,kDAEX,kBAACC,EAAA,EAAD,MAEA,kBAACC,EAAD,MAEA,kBAACC,EAAA,EAAD","file":"component---src-pages-third-party-resources-js-6848115276c26962ba0f.js","sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { sortBy, startCase } from 'lodash/fp'\n\nimport media from '../../components/styles/media'\nimport font from '../../components/styles/font'\n\nimport { ContentContainer } from '../../components/layout/ContentContainer'\nimport BodyText from '../../components/styles/BodyText'\nimport { Title, SubTitle } from '../../components/styles/shared'\n\nimport THIRD_PARTY_RESOURCES from './thirdPartyResourcesData'\n\nconst ResourcePageContainer = styled.div`\n    margin-top: 3rem;\n    margin-bottom: 6rem;\n`\n\nconst ResourceTableContainer = styled.div``\n\nconst ResourceTableEntry = styled.div`\n    display: grid;\n    width: 100%;\n    grid-auto-flow: column;\n    grid-template-columns: 6rem 2fr 1fr 1fr 1fr;\n    align-items: center;\n    grid-gap: 2rem;\n\n    padding: 1rem;\n\n    border-bottom: 1px solid #eaeaea;\n\n    &:nth-child(even) {\n        background: #f9f9f9;\n    }\n\n    img {\n        width: 5.6rem;\n        height: 8rem;\n\n        object-fit: cover;\n\n        transition: transform 0.3s ease-in-out;\n\n        box-shadow: 0 0.2rem 0.5rem rgba(0, 0, 0, 0.3),\n            0 0.4rem 0.8rem rgba(0, 0, 0, 0.1);\n    }\n\n    .title {\n        ${font.display}\n        font-size: 1.1rem;\n    }\n\n    .author,\n    .date,\n    .type {\n        opacity: 0.7;\n    }\n\n    &:hover {\n        img {\n            transform: scale(1.04);\n        }\n    }\n\n    ${media.phone`\n        width: calc(100% - 2rem);\n        grid-template-columns: 4rem 1.5fr 1fr 1fr;\n        grid-gap: 0.5rem;\n        padding: 1rem;\n\n        .title {\n            font-size: 0.9rem;\n        }\n\n        .author,\n        .date {\n            font-size: 0.8rem;\n        }\n\n        .resource-type {\n            display: none;\n        }\n\n        img {\n            width: 3.5rem;\n            height: 5rem;\n        }\n    `}\n`\n\nconst StyleSortButton = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    ${font.body}\n\n    font-size: 1rem;\n    font-weight: 600;\n\n    background: none;\n    border: none;\n    cursor: pointer;\n    outline: none;\n    text-align: left;\n\n    ${({ active, sortAsc }) =>\n        active &&\n        `\n        span {\n            text-decoration: underline;\n        }\n\n\n        &:after {\n            margin-left: 0.5rem;\n            font-size: 0.7rem;\n            content: '${sortAsc ? '▲' : '▼'}';\n            text-decoration: none;\n        }`}\n\n    ${media.phone`\n        font-size: 0.8rem;\n    `}\n`\n\nconst SortButton = ({\n    children,\n    sortByField,\n    setSortBy,\n    currentSortBy,\n    sortAsc,\n    className,\n}) => {\n    return (\n        <StyleSortButton\n            sortAsc={sortAsc}\n            active={sortByField === currentSortBy}\n            onClick={() => {\n                setSortBy(sortByField)\n            }}\n            className={className}\n        >\n            <span>{children}</span>\n        </StyleSortButton>\n    )\n}\n\nconst ThirdPartyLicence = () => {\n    const [sortByField, setSortByField] = useState('releaseDate')\n    const [sortAsc, setSortAsc] = useState(true)\n\n    const setSortMethod = field => {\n        setSortByField(field)\n\n        if (sortByField === field) {\n            setSortAsc(!sortAsc)\n        } else {\n            setSortAsc(field === 'releaseDate')\n        }\n    }\n\n    let sortedResources = sortBy(sortByField, THIRD_PARTY_RESOURCES)\n\n    if (sortAsc) {\n        sortedResources = sortedResources.reverse()\n    }\n\n    return (\n        <ResourcePageContainer>\n            <ContentContainer>\n                <Title>Mausritter Third-Party Resources</Title>\n\n                <BodyText\n                    className=\"small center\"\n                    style={{\n                        marginBottom: '3rem',\n                    }}\n                >\n                    <p>\n                        These works are created under the Mausritter Third Party\n                        Licence, and are not assocated with Losing Games.\n                    </p>\n                    <p>\n                        Learn about the{' '}\n                        <Link to=\"/third-party-licence\">\n                            Mausritter Third Party Licence\n                        </Link>\n                    </p>\n                </BodyText>\n\n                <ResourceTableContainer>\n                    <ResourceTableEntry>\n                        <div className=\"image\"> </div>\n                        <SortButton\n                            setSortBy={setSortMethod}\n                            currentSortBy={sortByField}\n                            sortAsc={sortAsc}\n                            sortByField=\"name\"\n                        >\n                            Title\n                        </SortButton>\n                        <SortButton\n                            setSortBy={setSortMethod}\n                            currentSortBy={sortByField}\n                            sortAsc={sortAsc}\n                            sortByField=\"author\"\n                        >\n                            Author\n                        </SortButton>\n                        <SortButton\n                            setSortBy={setSortMethod}\n                            currentSortBy={sortByField}\n                            sortAsc={!sortAsc}\n                            sortByField=\"releaseDate\"\n                        >\n                            Release date\n                        </SortButton>\n                        <SortButton\n                            setSortBy={setSortMethod}\n                            currentSortBy={sortByField}\n                            sortAsc={sortAsc}\n                            sortByField=\"type\"\n                            className=\"resource-type\"\n                        >\n                            Type\n                        </SortButton>\n                    </ResourceTableEntry>\n                    {sortedResources.map(\n                        ({ image, link, name, author, releaseDate, type }) => (\n                            <ResourceTableEntry>\n                                <a\n                                    href={link}\n                                    target=\"_blank\"\n                                    className=\"image\"\n                                >\n                                    {image && (\n                                        <img\n                                            src={image}\n                                            alt=\"\"\n                                            loading=\"lazy\"\n                                        />\n                                    )}\n                                </a>\n                                <a\n                                    href={link}\n                                    target=\"_blank\"\n                                    className=\"title\"\n                                >\n                                    {name}\n                                </a>\n                                <div className=\"author\">{author}</div>\n                                <div className=\"date\">{releaseDate}</div>\n                                <div className=\"resource-type\">\n                                    {startCase(type)}\n                                </div>\n                            </ResourceTableEntry>\n                        )\n                    )}\n                </ResourceTableContainer>\n            </ContentContainer>\n        </ResourcePageContainer>\n    )\n}\n\nexport default ThirdPartyLicence\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport SEO from \"../components/layout/SEO\"\nimport SiteContainer from \"../components/layout/SiteContainer\"\nimport Navigation from \"../components/navigation/Navigation\"\nimport Footer from \"../components/navigation/Footer\"\n\nimport ThirdPartyResources from \"../components/thirdPartyResources/ThirdPartyResources\"\n\nconst IndexPage = () => {\n    return (\n        <SiteContainer>\n            <SEO title=\"Mausritter Third-party Adventures & Resources\" />\n\n            <Navigation />\n\n            <ThirdPartyResources />\n\n            <Footer />\n        </SiteContainer>\n    )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}